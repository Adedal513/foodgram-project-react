version: '3.3'
name: foodgram

services:
  frontend:
    container_name: foodgram_frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - app
    env_file:
      - ./.env
  nginx:
    container_name: foodgram_nginx
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/var/html/static
      - media_volume:/var/html/media
    restart: on-failure
    depends_on:
      - frontend
      - app
  psql:
    container_name: foodgram_psql
    image: postgres:15.2
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../init_db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 120
    env_file:
      ./.env
  app:
    container_name: foodgram_app
    build:
      context: ../backend
      dockerfile: Dockerfile
    expose:
      - "8000:8000"
    command: bash startup.sh
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
      - ./gunicorn_log:/var/log/gunicorn
    env_file:
      - ./.env
    depends_on:
      psql:
        condition: service_healthy

volumes:
  static_volume:
  media_volume:
  postgres_data: